{"ast":null,"code":"var _jsxFileName = \"/Users/theophiletarbe/Desktop/cours/ING4/git_ING4/ING_4/techweb/v3/front-end/src/Channel.js\";\nimport { useRef, useState } from 'react';\nimport axios from 'axios';\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/core'; // Layout\n\nimport { useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'; // Local\n\nimport Form from './channel/Form';\nimport List from './channel/List';\n\nconst useStyles = theme => ({\n  root: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    background: 'rgba(0,0,0,.2)',\n    position: 'relative'\n  },\n  fab: {\n    position: 'absolute !important',\n    // position: 'fixed !important',\n    top: theme.spacing(2),\n    // width: '50px',\n    // bottom: '0',\n    // marginLeft: '100%',\n    // bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabDisabled: {\n    display: 'none !important'\n  }\n});\n\nexport default (({\n  channel\n}) => {\n  const styles = useStyles(useTheme());\n  const listRef = useRef();\n  const channelId = useRef();\n  const [messages, setMessages] = useState([]);\n  const [scrollDown, setScrollDown] = useState(false);\n\n  const addMessage = message => {\n    fetchMessages();\n  };\n\n  const fetchMessages = async () => {\n    setMessages([]);\n    const {\n      data: messages\n    } = await axios.get(`http://localhost:3001/channels/${channel.id}/messages`);\n    setMessages(messages);\n\n    if (listRef.current) {\n      listRef.current.scroll();\n    }\n  };\n\n  if (channelId.current !== channel.id) {\n    fetchMessages();\n    channelId.current = channel.id;\n  }\n\n  const onScrollDown = scrollDown => {\n    setScrollDown(scrollDown);\n  };\n\n  const onClickScroll = () => {\n    listRef.current.scroll();\n  };\n\n  return jsx(\"div\", {\n    css: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, jsx(List, {\n    channel: channel,\n    messages: messages,\n    onScrollDown: onScrollDown,\n    ref: listRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), jsx(Form, {\n    addMessage: addMessage,\n    channel: channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"Latest messages\",\n    css: [styles.fab, scrollDown || styles.fabDisabled],\n    onClick: onClickScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, jsx(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/theophiletarbe/Desktop/cours/ING4/git_ING4/ING_4/techweb/v3/front-end/src/Channel.js"],"names":["useRef","useState","axios","jsx","useTheme","Fab","ArrowDropDownIcon","Form","List","useStyles","theme","root","height","flex","display","flexDirection","background","position","fab","top","spacing","right","fabDisabled","channel","styles","listRef","channelId","messages","setMessages","scrollDown","setScrollDown","addMessage","message","fetchMessages","data","get","id","current","scroll","onScrollDown","onClickScroll"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\nimport axios from 'axios';\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\n// Layout\nimport { useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// Local\nimport Form from './channel/Form'\nimport List from './channel/List'\n\nconst useStyles = (theme) => ({\n  root: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    background: 'rgba(0,0,0,.2)',\n    position: 'relative',\n  },\n  fab: {\n    position: 'absolute !important',\n    // position: 'fixed !important',\n    top: theme.spacing(2),\n    // width: '50px',\n    // bottom: '0',\n    // marginLeft: '100%',\n    // bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabDisabled: {\n    display: 'none !important',\n  }\n})\n\nexport default ({\n  channel\n}) => {\n  const styles = useStyles(useTheme())\n  const listRef = useRef();\n  const channelId = useRef()\n  const [messages, setMessages] = useState([])\n  const [scrollDown, setScrollDown] = useState(false)\n  const addMessage = (message) => {\n    fetchMessages()\n  }\n  const fetchMessages = async () => {\n    setMessages([])\n    const {data: messages} = await axios.get(`http://localhost:3001/channels/${channel.id}/messages`)\n    setMessages(messages)\n    if(listRef.current){\n      listRef.current.scroll()\n    }\n  }\n  \n  if(channelId.current !== channel.id){\n    fetchMessages()\n    channelId.current = channel.id\n  }\n  const onScrollDown = (scrollDown) => {\n    setScrollDown(scrollDown)\n  }\n  const onClickScroll = () => {\n    listRef.current.scroll()\n  }\n  return (\n    <div css={styles.root}>\n      <List\n        channel={channel}\n        messages={messages}\n        onScrollDown={onScrollDown}\n        ref={listRef}\n      />\n      <Form addMessage={addMessage} channel={channel} />\n      <Fab\n        color=\"primary\"\n        aria-label=\"Latest messages\"\n        css={[styles.fab, scrollDown || styles.fabDisabled]}\n        onClick={onClickScroll}\n      >\n        <ArrowDropDownIcon />\n      </Fab>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}